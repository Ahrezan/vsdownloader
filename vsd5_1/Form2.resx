<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>